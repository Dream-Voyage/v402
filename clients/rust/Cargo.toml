[package]
name = "v402-client"
version = "1.0.0"
edition = "2021"
rust-version = "1.70"
authors = ["v402 Team <team@v402.network>"]
description = "High-performance Rust client for v402 protocol with multi-chain payment support"
documentation = "https://docs.rs/v402-client"
repository = "https://github.com/v402/client-rust"
license = "MIT OR Apache-2.0"
keywords = ["blockchain", "payments", "web3", "micropayments", "v402"]
categories = ["web-programming::http-client", "cryptography::cryptocurrencies", "asynchronous"]
readme = "README.md"

[lib]
name = "v402_client"
path = "src/lib.rs"

[[example]]
name = "basic_client"
path = "examples/basic_client.rs"

[[example]]
name = "batch_requests"
path = "examples/batch_requests.rs"

[[example]]
name = "custom_middleware"
path = "examples/custom_middleware.rs"

[dependencies]
# Async runtime
tokio = { version = "1.35", features = ["full"] }
tokio-util = { version = "0.7", features = ["full"] }

# HTTP client
reqwest = { version = "0.11", features = ["json", "stream", "gzip", "brotli", "deflate", "http2"] }
hyper = { version = "0.14", features = ["full"] }

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
serde_yaml = "0.9"

# Async utilities
futures = "0.3"
futures-util = "0.3"
async-trait = "0.1"

# Blockchain libraries
ethers = { version = "2.0", features = ["full"] }
solana-client = "1.17"
solana-sdk = "1.17"

# Cryptography
k256 = { version = "0.13", features = ["ecdsa"] }
sha2 = "0.10"
hex = "0.4"

# Error handling
thiserror = "1.0"
anyhow = "1.0"

# Logging and tracing
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"] }
tracing-opentelemetry = "0.21"

# Metrics
prometheus = { version = "0.13", features = ["process"] }
metrics = "0.22"
metrics-prometheus = "0.6"

# Configuration
config = "0.14"
clap = { version = "4.4", features = ["derive", "env"] }

# Utilities
uuid = { version = "1.6", features = ["v4", "serde"] }
url = { version = "2.4", features = ["serde"] }
once_cell = "1.19"
parking_lot = "0.12"

# Time handling
chrono = { version = "0.4", features = ["serde"] }

# Caching
moka = { version = "0.12", features = ["future"] }

# Rate limiting
governor = "0.6"
nonzero_ext = "0.3"

# Circuit breaker
resilience4j = "0.1"

[dev-dependencies]
tokio-test = "0.4"
mockall = "0.12"
wiremock = "0.6"
criterion = { version = "0.5", features = ["html_reports", "async_tokio"] }
proptest = "1.4"

[features]
default = ["full"]
full = ["metrics", "tracing", "ethereum", "solana", "cache"]
ethereum = ["ethers"]
solana = ["solana-client", "solana-sdk"]
metrics = ["prometheus", "metrics-prometheus"]
tracing = ["tracing-opentelemetry"]
cache = ["moka"]

# Performance optimizations
[profile.release]
opt-level = 3
lto = "fat"
codegen-units = 1
panic = "abort"

[profile.dev]
opt-level = 0
debug = true

[profile.bench]
opt-level = 3
debug = false
rpath = false
lto = "fat"
debug-assertions = false
codegen-units = 1
panic = "abort"

[[bench]]
name = "client_benchmark"
harness = false

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]
